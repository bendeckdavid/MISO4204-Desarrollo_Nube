services:
  db:
    image: postgres:16-alpine
    container_name: fastapi_db
    environment:
      POSTGRES_USER: fastapi_user
      POSTGRES_PASSWORD: fastapi_password
      POSTGRES_DB: fastapi_db
    command: postgres -c max_connections=300 -c shared_buffers=256MB -c effective_cache_size=1GB
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fastapi_user -d fastapi_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  redis:
    image: redis:7-alpine
    container_name: fastapi_redis
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fastapi_api
    command: gunicorn app.main:app --workers 4 --worker-class uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000 --timeout 120 --keep-alive 5 --max-requests 1000 --max-requests-jitter 100
    volumes:
      - .:/app
      - media_data:/app/media  # Shared media storage
    environment:
      - DB_POOL_SIZE=10
      - DB_MAX_OVERFLOW=20
      - DB_POOL_TIMEOUT=30
      - DB_POOL_RECYCLE=3600
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - app_network

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fastapi_worker
    command: celery -A app.worker.celery_app worker --loglevel=info
    volumes:
      - .:/app
      - media_data:/app/media  # Shared media storage
    env_file:
      - .env
    depends_on:
      - redis
      - db
      - api
    networks:
      - app_network

  nginx:
    image: nginx:alpine
    container_name: fastapi_nginx
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "8080:80"
    depends_on:
      - api
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  postgres_data:
  media_data:  # Shared volume for uploaded and processed videos

networks:
  app_network:
    driver: bridge
